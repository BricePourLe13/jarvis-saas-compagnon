-- ===========================================
-- üßπ NETTOYAGE: Supprimer toutes les franchises de test
-- ===========================================
-- But: Remettre √† z√©ro la base pour ne garder que
--      les franchises cr√©√©es manuellement via l'admin

-- 1. AFFICHER LES FRANCHISES EXISTANTES (pour v√©rification)
DO $$ 
DECLARE 
    franchise_record RECORD;
    total_count INTEGER;
BEGIN
    -- Compter le total
    SELECT COUNT(*) INTO total_count FROM franchises;
    
    RAISE NOTICE 'üìä √âTAT ACTUEL DE LA BASE:';
    RAISE NOTICE '   Total franchises: %', total_count;
    RAISE NOTICE '';
    
    -- Lister toutes les franchises
    IF total_count > 0 THEN
        RAISE NOTICE 'üìã FRANCHISES EXISTANTES:';
        FOR franchise_record IN 
            SELECT id, name, contact_email, created_at 
            FROM franchises 
            ORDER BY created_at DESC
        LOOP
            RAISE NOTICE '   ‚Ä¢ % - % (cr√©√© le %)', 
                franchise_record.name, 
                franchise_record.contact_email,
                franchise_record.created_at::date;
        END LOOP;
        RAISE NOTICE '';
    ELSE
        RAISE NOTICE '‚úÖ Aucune franchise trouv√©e - base d√©j√† propre';
    END IF;
END $$;

-- 2. SUPPRIMER TOUTES LES DONN√âES LI√âES EN CASCADE
DO $$ 
DECLARE 
    deleted_gyms INTEGER;
    deleted_users INTEGER;
    deleted_franchises INTEGER;
BEGIN
    -- Supprimer les salles li√©es (si la table existe)
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'gyms') THEN
        DELETE FROM gyms;
        GET DIAGNOSTICS deleted_gyms = ROW_COUNT;
        RAISE NOTICE 'üèãÔ∏è Supprim√© % salle(s)', deleted_gyms;
    ELSE
        deleted_gyms := 0;
        RAISE NOTICE 'üèãÔ∏è Table gyms inexistante - ignor√©e';
    END IF;
    
    -- Supprimer les utilisateurs propri√©taires de franchise (optionnel - √† d√©commenter si souhait√©)
    -- DELETE FROM users WHERE role = 'franchise_owner';
    -- GET DIAGNOSTICS deleted_users = ROW_COUNT;
    -- RAISE NOTICE 'üë§ Supprim√© % utilisateur(s) propri√©taire(s)', deleted_users;
    
    -- Supprimer TOUTES les franchises
    DELETE FROM franchises;
    GET DIAGNOSTICS deleted_franchises = ROW_COUNT;
    
    RAISE NOTICE '';
    RAISE NOTICE 'üóëÔ∏è SUPPRESSION TERMIN√âE:';
    RAISE NOTICE '   ‚Ä¢ % franchise(s) supprim√©e(s)', deleted_franchises;
    RAISE NOTICE '   ‚Ä¢ % salle(s) supprim√©e(s)', deleted_gyms;
    RAISE NOTICE '';
    
    IF deleted_franchises > 0 THEN
        RAISE NOTICE '‚úÖ Base nettoy√©e avec succ√®s !';
        RAISE NOTICE '   Tu peux maintenant cr√©er tes franchises via l''admin';
    ELSE
        RAISE NOTICE 'üí° Aucune franchise √† supprimer - base d√©j√† vide';
    END IF;
END $$;

-- 3. R√âINITIALISER LES S√âQUENCES (optionnel)
-- Pour que les prochains IDs commencent √† 1
-- D√©commente si tu veux repartir de z√©ro pour les IDs num√©riques

-- ALTER SEQUENCE IF EXISTS franchises_id_seq RESTART WITH 1;
-- ALTER SEQUENCE IF EXISTS gyms_id_seq RESTART WITH 1;

-- 4. V√âRIFICATION FINALE
DO $$ 
DECLARE 
    final_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO final_count FROM franchises;
    
    RAISE NOTICE '';
    RAISE NOTICE 'üîç V√âRIFICATION FINALE:';
    RAISE NOTICE '   Franchises restantes: %', final_count;
    
    IF final_count = 0 THEN
        RAISE NOTICE '‚úÖ Parfait ! Base compl√®tement nettoy√©e';
        RAISE NOTICE 'üöÄ Pr√™t pour cr√©er tes vraies franchises !';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è Il reste encore % franchise(s)', final_count;
    END IF;
    
    RAISE NOTICE '';
    RAISE NOTICE 'üìù PROCHAINES √âTAPES:';
    RAISE NOTICE '   1. Va sur http://localhost:3001/admin/franchises';
    RAISE NOTICE '   2. Clique "Nouvelle Franchise"';
    RAISE NOTICE '   3. Cr√©e tes vraies franchises manuellement';
END $$; 