-- ===========================================
-- üìä JARVIS SaaS - Donn√©es de test
-- ===========================================

-- ‚ö†Ô∏è ATTENTION : Ex√©cutez ce script APR√àS vous √™tre connect√© √† votre application
-- car il utilise auth.uid() pour cr√©er les franchises avec le bon propri√©taire

-- 1. V√©rifier que l'utilisateur est connect√©
SELECT 
    CASE 
        WHEN auth.uid() IS NULL THEN 'ERREUR: Vous devez √™tre connect√© pour ex√©cuter ce script'
        ELSE 'OK: Utilisateur connect√© avec ID = ' || auth.uid()::text
    END as status;

-- 2. Cr√©er des franchises de test (seulement si utilisateur connect√©)
INSERT INTO franchises (name, address, phone, email, city, postal_code, owner_id) 
SELECT 
    'FitGym Paris Centre',
    '123 Rue de Rivoli',
    '01.23.45.67.89',
    'paris@fitgym.fr',
    'Paris',
    '75001',
    auth.uid()
WHERE auth.uid() IS NOT NULL;

INSERT INTO franchises (name, address, phone, email, city, postal_code, owner_id) 
SELECT 
    'PowerGym Lyon',
    '456 Cours Lafayette', 
    '04.78.90.12.34',
    'lyon@powergym.fr',
    'Lyon',
    '69003',
    auth.uid()
WHERE auth.uid() IS NOT NULL;

-- 3. Cr√©er des sessions de test
INSERT INTO kiosk_sessions (franchise_id, session_type, conversation_data, duration_seconds, satisfaction_rating)
SELECT 
    f.id,
    'information',
    '{"messages": [{"role": "user", "content": "Quels sont vos horaires ?"}, {"role": "assistant", "content": "Nous sommes ouverts du lundi au vendredi de 6h √† 22h, et le week-end de 8h √† 20h."}]}',
    120,
    5
FROM franchises f 
WHERE f.owner_id = auth.uid()
LIMIT 1;

INSERT INTO kiosk_sessions (franchise_id, session_type, conversation_data, duration_seconds, satisfaction_rating)
SELECT 
    f.id,
    'reservation',
    '{"messages": [{"role": "user", "content": "Je voudrais r√©server un cours de yoga"}, {"role": "assistant", "content": "Parfait ! Nous avons des cr√©neaux disponibles mardi et jeudi √† 18h30."}]}',
    180,
    4
FROM franchises f 
WHERE f.owner_id = auth.uid()
LIMIT 1;

-- 4. Afficher le r√©sultat
SELECT 
    'Donn√©es de test cr√©√©es avec succ√®s !' as message,
    COUNT(*) as franchises_created
FROM franchises 
WHERE owner_id = auth.uid();

-- 5. V√©rifier les donn√©es cr√©√©es
SELECT 
    f.name as franchise_name,
    f.city,
    COUNT(ks.id) as nombre_sessions
FROM franchises f
LEFT JOIN kiosk_sessions ks ON f.id = ks.franchise_id
WHERE f.owner_id = auth.uid()
GROUP BY f.id, f.name, f.city;
