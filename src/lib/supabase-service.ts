/**
 * ðŸ”§ SUPABASE SERVICE ROLE CLIENT
 * 
 * Client spÃ©cial avec service_role pour bypasser RLS
 * UNIQUEMENT pour les opÃ©rations systÃ¨me (logging, etc.)
 */

import { createClient } from '@supabase/supabase-js'
import type { SupabaseClient } from '@supabase/supabase-js'

// ðŸ”’ Instance singleton service
let serviceInstance: SupabaseClient | null = null

/**
 * Obtenir l'instance Supabase avec service_role
 */
export function getSupabaseService(): SupabaseClient {
  if (!serviceInstance) {
    // VÃ©rifier que les variables d'environnement sont disponibles
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
    const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY
    
    if (!supabaseUrl || !serviceKey) {
      throw new Error('ðŸš¨ [SUPABASE SERVICE] Variables d\'environnement manquantes')
    }
    
    // ðŸ”’ Utiliser service_role pour bypasser RLS
    console.log('ðŸ”’ [SUPABASE SERVICE] Utilisation service_role pour bypass RLS')
    serviceInstance = createClient(
      supabaseUrl,
      serviceKey,
      {
        auth: {
          autoRefreshToken: false,
          persistSession: false
        }
      }
    )
  }

  return serviceInstance!
}
